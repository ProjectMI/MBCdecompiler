{
  "branch_eq": {
    "control_flow": "branch",
    "summary": "Условный переход по =",
    "opcodes": [
      "23:00"
    ]
  },
  "branch_lt": {
    "control_flow": "branch",
    "summary": "Условный переход по <",
    "opcodes": [
      "24:00"
    ]
  },
  "branch_le": {
    "control_flow": "branch",
    "summary": "Условный переход по <=",
    "opcodes": [
      "25:00"
    ]
  },
  "test_branch": {
    "control_flow": "branch",
    "summary": "Проверка значения на истинность и ветвление",
    "opcodes": [
      "26:00"
    ]
  },
  "testset_branch": {
    "control_flow": "branch",
    "summary": "Ветвление в стиле Lua TESTSET",
    "opcodes": [
      "27:00"
    ]
  },
  "tforloop_iter": {
    "control_flow": "branch",
    "summary": "TFORLOOP итератор",
    "opcodes": [
      "33:00"
    ]
  },
  "jump_relative": {
    "control_flow": "jump",
    "summary": "Безусловный переход по относительному смещению",
    "opcodes": [
      "22:00"
    ]
  },
  "call_helpers": {
    "control_flow": "call",
    "summary": "Все вспомогательные инструкции подготовки и возврата вызовов",
    "opcodes": [
      "16:00",
      "16:01",
      "16:02",
      "16:04",
      "16:172",
      "10:E8"
    ]
  },
    "fanout": {
    "control_flow": "fallthrough",
    "summary": "Фан-аут тестовых обёрток по флагам",
    "opcodes": [
      "10:08"
    ],
    "operand_role": "flags",
    "operand_aliases": {
      "0x2C02": "FANOUT_FLAGS",
      "0x2C03": "FANOUT_FLAGS"
    }
  },
  "call_dispatch": {
    "control_flow": "call",
    "summary": "Основной вызов функции",
    "opcodes": [
      "28:00"
    ]
  },
  "tailcall_dispatch": {
    "control_flow": "call",
    "summary": "Хвостовой вызов",
    "opcodes": [
      "29:00"
    ]
  },
  "return_values": {
    "control_flow": "return",
    "summary": "Инструкция возврата",
    "opcodes": [
      "30:00"
    ]
  },
  "terminator": {
    "control_flow": "stop",
    "summary": "Терминаторы выполнения, включая FF:00, FF:FF и их варианты",
    "opcodes": [
      "255:00",
      "255:48",
      "255:105"
    ]
  },
  "push_literal": {
    "control_flow": "fallthrough",
    "summary": "Все формы загрузки литералов (малые, средние, широкие, парные, followup). Семантика одинакова — помещение литерала(ов) на стек",
    "opcodes": [
      "00:00",
      "00:01",
      "00:02",
      "00:03",
      "00:04",
      "00:41",
      "00:44"
    ]
  },
  "inline_ascii_chunk": {
    "control_flow": "fallthrough",
    "summary": "Все инструкции вида inline_ascii_chunk_XXXX, представляющие собой закодированные ASCII-данные без изменения стека и управления",
    "opcodes": [
      "00:60",
      "00:65",
      "00:83",
      "00:99",
      "31:00",
      "71:101",
      "114:101",
      "115:00",
      "115:101",
      "124:124",
      "237:222"
    ]
  },
  "literal_marker": {
    "control_flow": "fallthrough",
    "summary": "Все ресурсные и структурные маркеры. Используются как описательные элементы, не изменяют выполнение",
    "opcodes": [
      "00:38",
      "00:40",
      "00:49",
      "00:62",
      "00:61",
      "00:94",
      "00:100",
      "00:101",
      "00:102",
      "00:114",
      "00:237",
      "00:240",
      "07:00",
      "09:00",
      "10:00",
      "14:00",
      "18:00",
      "20:00",
      "21:00",
      "40:00",
      "43:00",
      "50:00",
      "53:00",
      "59:00",
      "64:00",
      "67:00",
      "71:00",
      "102:00",
      "113:00",
      "117:00",
      "121:00",
      "122:00",
      "123:00",
      "125:00",
      "127:00",
      "129:00",
      "130:00",
      "134:00",
      "137:00",
      "138:00",
      "139:00",
      "150:00",
      "151:00",
      "153:00",
      "154:00",
      "158:00",
      "159:00",
      "160:00",
      "161:00",
      "162:00",
      "163:00",
      "165:00",
      "166:00",
      "168:00",
      "169:00",
      "171:00",
      "173:00",
      "174:00",
      "175:00",
      "176:00",
      "177:00",
      "178:00",
      "179:00",
      "183:00",
      "185:00",
      "186:00",
      "187:00",
      "188:00",
      "190:00",
      "191:00",
      "193:00",
      "194:00",
      "195:00",
      "197:00",
      "198:00",
      "199:00",
      "201:00",
      "202:00",
      "203:00",
      "205:00",
      "206:00",
      "207:00",
      "208:00",
      "209:00",
      "210:00",
      "211:00",
      "212:00",
      "213:00",
      "214:00",
      "215:00",
      "217:00",
      "218:00",
      "219:00",
      "220:00",
      "223:00",
      "225:00",
      "224:00",
      "226:00",
      "227:00",
      "228:00",
      "229:00",
      "231:00",
      "233:00",
      "234:00",
      "235:00",
      "236:00",
      "237:00",
      "238:00",
      "239:00",
      "241:00",
      "242:00",
      "243:00",
      "244:00",
      "245:00",
      "246:00",
      "247:00",
      "248:00",
      "249:00",
      "250:00",
      "252:00",
      "253:00",
      "254:00"
    ]
  },
  "fanout": {
    "control_flow": "fallthrough",
    "summary": "Инструкции дублирования значений на стеке (fanout_passthrough, fanout_single_a/b, fanout_pair и т.д.)",
    "opcodes": [
      "102:20",
      "102:21",
      "102:39",
      "102:67",
      "102:111"
    ]
  },
  "stack_shuffle": {
    "control_flow": "fallthrough",
    "summary": "Перестановки и дублирование значений на вершине стека (семейство 0x66)",
    "opcodes": [
      "66:15",
      "66:20",
      "66:75"
    ]
  },
  "indirect_access": {
    "control_flow": "fallthrough",
    "summary": "Снимает адрес с вершины стека, выполняет косвенный доступ и возвращает результат обратно на вершину",
    "opcodes": [
      "105:01",
      "105:16",
      "105:17",
      "105:32",
      "105:110"
    ]
  },
  "reduce_pair": {
    "control_flow": "fallthrough",
    "summary": "Базовый редуктор",
    "opcodes": [
      "04:00"
    ]
  },
  "reduce_quad": {
    "control_flow": "fallthrough",
    "summary": "Расширенный редуктор на четыре операнда",
    "opcodes": [
      "04:240"
    ]
  },
  "reduce_passthrough": {
    "control_flow": "fallthrough",
    "summary": "Форма редукции без изменения стека",
    "opcodes": [
      "04:102"
    ]
  },
  "stack_teardown_1": {
    "control_flow": "fallthrough",
    "summary": "Очистка одного элемента стека",
    "opcodes": [
      "01:236"
    ]
  },
  "stack_teardown_2": {
    "control_flow": "fallthrough",
    "summary": "Очистка двух элементов стека",
    "opcodes": [
      "01:8"
    ]
  },
  "stack_teardown_3": {
    "control_flow": "fallthrough",
    "summary": "Очистка трёх элементов стека",
    "opcodes": [
      "01:241"
    ]
  },
  "stack_teardown_4": {
    "control_flow": "fallthrough",
    "summary": "Очистка четырёх элементов стека",
    "opcodes": [
      "01:240"
    ]
  },
  "stack_teardown_5": {
    "control_flow": "fallthrough",
    "summary": "Очистка пяти элементов стека",
    "opcodes": [
      "01:00"
    ]
  },
  "unclassified": {
    "opcodes": []
  },
  "29:*": {
    "category": "tailcall_dispatch",
    "diapasone": "0x00–0xFF",
    "comment": "Все моды хвостовых вызовов; наиболее частый 0x10"
  },
  "30:*": {
    "category": "return_values",
    "diapasone": "0x00–0xFF",
    "comment": "Возвраты с параметризацией по количеству/месту значений; часто 0x29, 0x69"
  },
  "22:*": {
    "category": "jump_relative",
    "diapasone": "0x00–0xFF",
    "comment": "Безусловные прыжки с различными модификаторами"
  },
  "26:*": {
    "category": "test_branch",
    "diapasone": "0x00–0xFF",
    "comment": "Условные тестовые ветвления; например 0x2C"
  },
  "27:*": {
    "category": "testset_branch",
    "diapasone": "0x00–0xFF",
    "comment": "TestSet-ветвления всех модов"
  },
  "255:*": {
    "category": "terminator",
    "diapasone": "0x00–0xFF",
    "comment": "Терминаторы всех модов; часто встречаются 0x00, 0x30, 0x69"
  },
  "16:*": {
    "category": "call_helpers",
    "diapasone": "0x00–0xFF",
    "comment": "Вспомогательные вызовы с разными модами (00, 04, 64, 84, AC, D0 и др.)"
  },
  "66:*": {
    "category": "stack_shuffle",
    "diapasone": "0x00–0xFF",
    "comment": "Все шифтеры 66:xx, которые переставляют/дублируют элементы стека без побочных эффектов"
  },
  "69:*": {
    "category": "indirect_access",
    "diapasone": "0x00–0xFF",
    "comment": "Семейство 69:xx — косвенные обращения через адрес на вершине стека"
  }
}
