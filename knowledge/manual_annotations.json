{
  "branch_eq": {
    "control_flow": "branch",
    "opcodes": [
      "17:00"
    ],
    "stack_delta": -2.5,
    "summary": "Условный переход по равенству."
  },
  "branch_le": {
    "control_flow": "branch",
    "opcodes": [
      "19:00"
    ],
    "stack_delta": -5.333333333333332,
    "summary": "Условный переход по <=."
  },
  "branch_lt": {
    "control_flow": "branch",
    "opcodes": [
      "18:00"
    ],
    "stack_delta": 4,
    "summary": "Условный переход по строгому неравенству (меньше)."
  },
  "call_dispatch": {
    "control_flow": "call",
    "opcodes": [
      "1C:00"
    ],
    "stack_delta": 6,
    "summary": "Основной вызов функции."
  },
  "call_helpers": {
    "control_flow": "call",
    "opcodes": [
      "10:00",
      "10:01",
      "10:02",
      "10:04",
      "10:AC",
      "24:00",
      "3E:00"
    ],
    "stack_delta": 0,
    "summary": "Все вспомогательные инструкции подготовки и возврата вызовов (10:00–10:AC)."
  },
  "fanout": {
    "control_flow": "fallthrough",
    "opcodes": [
      "66:14",
      "66:15",
      "66:27",
      "66:43",
      "66:6F"
    ],
    "stack_delta": 0,
    "summary": "Инструкции дублирования значений на стеке (fanout_passthrough, fanout_single_a/b, fanout_pair и т.д.)."
  },
  "indirect_access": {
    "control_flow": "fallthrough",
    "opcodes": [
      "69:01",
      "69:10",
      "69:11",
      "69:20",
      "69:6E"
    ],
    "stack_delta": 0,
    "summary": "Все формы indirect_fetch_slot / indirect_store_slot и их варианты. Семантика одна — косвенные загрузки и записи."
  },
  "inline_ascii_chunk": {
    "control_flow": "fallthrough",
    "opcodes": [
      "00:3C",
      "00:41",
      "00:53",
      "00:63",
      "06:00",
      "1F:00",
      "47:65",
      "72:65",
      "73:00",
      "73:65",
      "7C:7C",
      "ED:DE"
    ],
    "stack_delta": 0,
    "summary": "Все инструкции вида inline_ascii_chunk_XXXX, представляющие собой закодированные ASCII-данные без изменения стека и управления."
  },
  "jump_relative": {
    "control_flow": "jump",
    "opcodes": [
      "16:00"
    ],
    "stack_delta": 0,
    "summary": "Безусловный переход по относительному смещению."
  },
  "literal_marker": {
    "control_flow": "fallthrough",
    "opcodes": [
      "00:26",
      "00:28",
      "00:31",
      "00:3D",
      "00:3E",
      "00:5E",
      "00:64",
      "00:65",
      "00:66",
      "00:69",
      "00:72",
      "00:ED",
      "00:F0",
      "00:FF",
      "02:66",
      "07:00",
      "09:00",
      "0A:00",
      "0E:00",
      "12:00",
      "14:00",
      "15:00",
      "23:30",
      "23:4F",
      "26:00",
      "26:2C",
      "28:00",
      "28:10",
      "2B:00",
      "30:00",
      "30:29",
      "30:32",
      "30:41",
      "30:65",
      "30:69",
      "30:6C",
      "31:30",
      "32:00",
      "32:29",
      "35:00",
      "3B:00",
      "3D:30",
      "40:00",
      "42:00",
      "43:00",
      "45:00",
      "47:00",
      "64:10",
      "66:00",
      "71:00",
      "72:00",
      "72:23",
      "72:30",
      "75:00",
      "79:00",
      "7A:00",
      "7B:00",
      "7D:00",
      "7F:00",
      "81:00",
      "82:00",
      "86:00",
      "89:00",
      "8A:00",
      "8B:00",
      "96:00",
      "97:00",
      "99:00",
      "9A:00",
      "9E:00",
      "9F:00",
      "A0:00",
      "A1:00",
      "A2:00",
      "A3:00",
      "A5:00",
      "A6:00",
      "A8:00",
      "A9:00",
      "AB:00",
      "AD:00",
      "AE:00",
      "AF:00",
      "B0:00",
      "B1:00",
      "B2:00",
      "B3:00",
      "B7:00",
      "B9:00",
      "BA:00",
      "BB:00",
      "BC:00",
      "BE:00",
      "BF:00",
      "C1:00",
      "C2:00",
      "C3:00",
      "C5:00",
      "C6:00",
      "C7:00",
      "C9:00",
      "CA:00",
      "CB:00",
      "CD:00",
      "CE:00",
      "CF:00",
      "D0:00",
      "D1:00",
      "D2:00",
      "D3:00",
      "D4:00",
      "D5:00",
      "D6:00",
      "D7:00",
      "D9:00",
      "DA:00",
      "DB:00",
      "DC:00",
      "DF:00",
      "E0:00",
      "E1:00",
      "E2:00",
      "E3:00",
      "E4:00",
      "E5:00",
      "E7:00",
      "E9:00",
      "EA:00",
      "EB:00",
      "EC:00",
      "ED:00",
      "EE:00",
      "EF:00",
      "F1:00",
      "F2:00",
      "F3:00",
      "F4:00",
      "F5:00",
      "F6:00",
      "F7:00",
      "F8:00",
      "F9:00",
      "FA:00",
      "FC:00",
      "FD:00",
      "FE:00",
      "FF:3D",
      "FF:FF"
    ],
    "stack_delta": 0,
    "summary": "Все ресурсные, структурные маркеры и подобные. Используются как описательные элементы, не изменяют выполнение."
  },
  "push_literal": {
    "control_flow": "fallthrough",
    "opcodes": [
      "00:00",
      "00:01",
      "00:02",
      "00:03",
      "00:04",
      "00:29",
      "00:2C",
      "04:29",
      "04:2C",
      "05:00",
      "0D:00",
      "29:00",
      "29:01",
      "29:29",
      "2C:01",
      "2C:02",
      "2C:03",
      "2C:04",
      "44:00",
      "74:4F"
    ],
    "stack_delta": 1,
    "summary": "Все формы загрузки литералов (малые, средние, широкие, парные, followup). Семантика одинакова — помещение литерала(ов) на стек."
  },
  "reduce_pair": {
    "control_flow": "fallthrough",
    "opcodes": [
      "00:30",
      "04:00",
      "65:30",
      "65:72",
      "65:74",
      "65:78",
      "74:50"
    ],
    "stack_delta": -2,
    "summary": "Базовый редуктор."
  },
  "reduce_passthrough": {
    "control_flow": "fallthrough",
    "opcodes": [
      "04:66",
      "74:53",
      "74:65"
    ],
    "stack_delta": 0,
    "summary": "Форма редукции без изменения стека."
  },
  "reduce_quad": {
    "control_flow": "fallthrough",
    "opcodes": [
      "04:F0"
    ],
    "stack_delta": -4,
    "summary": "Расширенный редуктор на четыре операнда."
  },
  "return_values": {
    "control_flow": "return",
    "opcodes": [
      "1E:00"
    ],
    "stack_delta": -2,
    "summary": "Инструкция возврата."
  },
  "stack_teardown_1": {
    "control_flow": "fallthrough",
    "opcodes": [
      "01:66",
      "01:EC",
      "29:10",
      "29:20",
      "2C:00"
    ],
    "stack_delta": -1,
    "summary": "Очистка одного элемента стека."
  },
  "stack_teardown_3": {
    "control_flow": "fallthrough",
    "opcodes": [
      "01:F1"
    ],
    "stack_delta": -3,
    "summary": "Очистка трёх элементов стека."
  },
  "stack_teardown_4": {
    "control_flow": "fallthrough",
    "opcodes": [
      "01:F0"
    ],
    "stack_delta": -4,
    "summary": "Очистка четырёх элементов стека."
  },
  "stack_teardown_5": {
    "control_flow": "fallthrough",
    "opcodes": [
      "01:00",
      "65:00",
      "74:00"
    ],
    "stack_delta": -5,
    "summary": "Очистка пяти элементов стека."
  },
  "tailcall_dispatch": {
    "control_flow": "call",
    "opcodes": [
      "1D:00"
    ],
    "stack_delta": -3,
    "summary": "Хвостовой вызов."
  },
  "terminator": {
    "control_flow": "stop",
    "opcodes": [
      "FF:00",
      "FF:30",
      "FF:69"
    ],
    "stack_delta": 0,
    "summary": "Терминаторы выполнения, включая FF:00, FF:FF и их варианты."
  },
  "test_branch": {
    "control_flow": "branch",
    "opcodes": [
      "1A:00"
    ],
    "stack_delta": 2,
    "summary": "Проверка значения на истинность и ветвление."
  },
  "testset_branch": {
    "control_flow": "branch",
    "opcodes": [
      "1B:00"
    ],
    "stack_delta": 2,
    "summary": "Ветвление в стиле Lua TESTSET."
  },
  "tforloop_iter": {
    "control_flow": "branch",
    "opcodes": [
      "21:00"
    ],
    "stack_delta": 1,
    "summary": "TFORLOOP итератор."
  },
  "unclassified": {
    "opcodes": []
  }
}